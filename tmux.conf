#change default bind to Ctrl+a (C-a)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Set status bar on
set -g status on

# Update the status line every second
set -g status-interval 1

# Set default to zsh
set -g default-shell /usr/local/bin/zsh

# Set the TERM
set -g terminal-overrides ",*-256color:Tc"

# Default bar color
# set-option -g status-style bg="#7E9DD6",fg="#000000"
set -g status-style bg="#313244",fg="#89b4fa"

# Auto rename window
set -g automatic-rename on

# Keybinding for reloading the config file
bind r source-file ~/.tmux.conf \; set display-time 500 \; display-message " ~/.tmux.conf reloaded..."

# Set the position of window lists.
set -g status-justify left # [left | centre | right]

# Set Vi style keybinding in the status line
set -g status-keys vi

# Set the status bar position
set -g status-position bottom # [top, bottom]

# Set left side status bar length and style
set -g status-left-length 60
set -g status-left-style default

# Set right side status bar length and style
set -g status-right-length 140
set -g status-right-style default

# Display the hostname
set -g status-right '"#H" '


# Display the time
# set -ag status-right '%l:%M%p '
set -ag status-right '%R '

# Display the date
# set -ag status-right '%F'
set -ag status-right '%d.%m.%g'

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# Set the escape time to 0 for faster key repetition
set -s escape-time 0

# start panes numbers at 1 also to add some consistency
setw -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# smart pane switching with awareness of vim splits
# <ctrl-h> => left
# <ctrl-j> => down
# <ctrl-k> => up
# <ctrl-l> => right
#
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# <ctrl-\> => previous split
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# restore clear screen (C-l)
bind C-l send-keys 'C-l'

# vim style navigation in copy mode
setw -g mode-keys vi

# copy & paste on OS X
# setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send-keys -X begin-selection
# setup 'y' to yank, just like Vim
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# bind ']' to paste selection
bind -T copy-mode-vi ] send-keys -X copy-selection

# open new windows and splits in the directory of the current pane
bind c new-window -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'

# vim-like splitting
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# split window 75/25
unbind ^T
bind ^T split-window -h -p 25 '#{pane_current_path}'

# tile all windows
unbind =
bind = select-layout tiled

# maximize pane
unbind +
bind + resize-pane -Z

# use a variation of the Vim movement keys to resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# enable mouse
set -g -q mouse on

# mouse scrolling
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# window activity
setw -g monitor-activity on
set -g visual-activity off
set -g window-status-activity-style 'bg=default,fg=brightred'

# list of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '15'
set -g @continuum-restore 'off'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'
