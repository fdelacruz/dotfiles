#change default bind to Ctrl+a (C-a)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# start panes numbers at 1 also to add some consistency
setw -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# changing the default delay
set -sg escape-time 1

# increase scrollback lines
set -g history-limit 20000

# improve colors
set -g default-terminal 'screen-256color'

# source tmuxline snapshot
if-shell "test -f ~/.tmuxline.conf" "source-file ~/.tmuxline.conf"

# smart pane switching with awareness of vim splits
# <ctrl-h> => left
# <ctrl-j> => down
# <ctrl-k> => up
# <ctrl-l> => right
#
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# <ctrl-\> => previous split
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# restore clear screen (C-l)
bind C-l send-keys 'C-l'

# reload config
unbind r
bind r source-file ~/.tmux.conf \; display-message 'config reloaded..'

# vim style navigation in copy mode
setw -g mode-keys vi

# copy & paste on OS X
# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
# setup 'y' to yank, just like Vim
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# bind ']' to paste selection
bind-key -T copy-mode-vi ] send-keys -X copy-selection

# open new windows and splits in the directory of the current pane
bind-key c new-window -c '#{pane_current_path}'
bind-key '"' split-window -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'

# split window 75/25
unbind ^T
bind ^T split-window -h -p 25 '#{pane_current_path}'

# tile all windows
unbind =
bind = select-layout tiled

# maximize pane
unbind +
bind + resize-pane -Z

# use a variation of the Vim movement keys to resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# enable mouse
set-option -g -q mouse on

# mouse scrolling
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# window activity
setw -g monitor-activity on
set -g visual-activity off

# list of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '15'
set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'
